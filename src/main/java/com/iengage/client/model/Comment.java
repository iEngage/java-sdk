/**
 * iEngage 2.0 API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.iengage.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.iengage.client.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;


/**
 * Comment
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-18T06:00:03.235Z")
public class Comment   {
  @SerializedName("commentId")
  private Long commentId = null;

  @SerializedName("commentor")
  private User commentor = null;

  @SerializedName("commentText")
  private String commentText = null;

  @SerializedName("commentTime")
  private DateTime commentTime = null;

  public Comment commentId(Long commentId) {
    this.commentId = commentId;
    return this;
  }

   /**
   * Get commentId
   * @return commentId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getCommentId() {
    return commentId;
  }

  public void setCommentId(Long commentId) {
    this.commentId = commentId;
  }

  public Comment commentor(User commentor) {
    this.commentor = commentor;
    return this;
  }

   /**
   * Get commentor
   * @return commentor
  **/
  @ApiModelProperty(example = "null", value = "")
  public User getCommentor() {
    return commentor;
  }

  public void setCommentor(User commentor) {
    this.commentor = commentor;
  }

  public Comment commentText(String commentText) {
    this.commentText = commentText;
    return this;
  }

   /**
   * Get commentText
   * @return commentText
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getCommentText() {
    return commentText;
  }

  public void setCommentText(String commentText) {
    this.commentText = commentText;
  }

  public Comment commentTime(DateTime commentTime) {
    this.commentTime = commentTime;
    return this;
  }

   /**
   * Get commentTime
   * @return commentTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getCommentTime() {
    return commentTime;
  }

  public void setCommentTime(DateTime commentTime) {
    this.commentTime = commentTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Comment comment = (Comment) o;
    return Objects.equals(this.commentId, comment.commentId) &&
        Objects.equals(this.commentor, comment.commentor) &&
        Objects.equals(this.commentText, comment.commentText) &&
        Objects.equals(this.commentTime, comment.commentTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commentId, commentor, commentText, commentTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Comment {\n");
    
    sb.append("    commentId: ").append(toIndentedString(commentId)).append("\n");
    sb.append("    commentor: ").append(toIndentedString(commentor)).append("\n");
    sb.append("    commentText: ").append(toIndentedString(commentText)).append("\n");
    sb.append("    commentTime: ").append(toIndentedString(commentTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

