/*
 * Stakeholder engagement API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.iengage.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.iengage.client.model.User;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * Answer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-01-24T14:38:21.881+05:30")
public class Answer {
  @SerializedName("answerId")
  private Long answerId = null;

  @SerializedName("answerDescription")
  private String answerDescription = null;

  @SerializedName("questionId")
  private Long questionId = null;

  @SerializedName("answeringUser")
  private User answeringUser = null;

  @SerializedName("createdDate")
  private DateTime createdDate = null;

  @SerializedName("isMarkedAnswer")
  private Boolean isMarkedAnswer = false;

  @SerializedName("noOfLikes")
  private Integer noOfLikes = null;

  @SerializedName("noOfDislikes")
  private Integer noOfDislikes = null;

  @SerializedName("replyCount")
  private Integer replyCount = null;

  @SerializedName("isLiked")
  private Boolean isLiked = false;

  @SerializedName("isDisliked")
  private Boolean isDisliked = false;

  public Answer answerId(Long answerId) {
    this.answerId = answerId;
    return this;
  }

   /**
   * Get answerId
   * @return answerId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getAnswerId() {
    return answerId;
  }

  public void setAnswerId(Long answerId) {
    this.answerId = answerId;
  }

  public Answer answerDescription(String answerDescription) {
    this.answerDescription = answerDescription;
    return this;
  }

   /**
   * Get answerDescription
   * @return answerDescription
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getAnswerDescription() {
    return answerDescription;
  }

  public void setAnswerDescription(String answerDescription) {
    this.answerDescription = answerDescription;
  }

  public Answer questionId(Long questionId) {
    this.questionId = questionId;
    return this;
  }

   /**
   * Get questionId
   * @return questionId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getQuestionId() {
    return questionId;
  }

  public void setQuestionId(Long questionId) {
    this.questionId = questionId;
  }

  public Answer answeringUser(User answeringUser) {
    this.answeringUser = answeringUser;
    return this;
  }

   /**
   * Get answeringUser
   * @return answeringUser
  **/
  @ApiModelProperty(example = "null", value = "")
  public User getAnsweringUser() {
    return answeringUser;
  }

  public void setAnsweringUser(User answeringUser) {
    this.answeringUser = answeringUser;
  }

  public Answer createdDate(DateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(DateTime createdDate) {
    this.createdDate = createdDate;
  }

  public Answer isMarkedAnswer(Boolean isMarkedAnswer) {
    this.isMarkedAnswer = isMarkedAnswer;
    return this;
  }

   /**
   * Get isMarkedAnswer
   * @return isMarkedAnswer
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsMarkedAnswer() {
    return isMarkedAnswer;
  }

  public void setIsMarkedAnswer(Boolean isMarkedAnswer) {
    this.isMarkedAnswer = isMarkedAnswer;
  }

  public Answer noOfLikes(Integer noOfLikes) {
    this.noOfLikes = noOfLikes;
    return this;
  }

   /**
   * Get noOfLikes
   * @return noOfLikes
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getNoOfLikes() {
    return noOfLikes;
  }

  public void setNoOfLikes(Integer noOfLikes) {
    this.noOfLikes = noOfLikes;
  }

  public Answer noOfDislikes(Integer noOfDislikes) {
    this.noOfDislikes = noOfDislikes;
    return this;
  }

   /**
   * Get noOfDislikes
   * @return noOfDislikes
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getNoOfDislikes() {
    return noOfDislikes;
  }

  public void setNoOfDislikes(Integer noOfDislikes) {
    this.noOfDislikes = noOfDislikes;
  }

  public Answer replyCount(Integer replyCount) {
    this.replyCount = replyCount;
    return this;
  }

   /**
   * Get replyCount
   * @return replyCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getReplyCount() {
    return replyCount;
  }

  public void setReplyCount(Integer replyCount) {
    this.replyCount = replyCount;
  }

  public Answer isLiked(Boolean isLiked) {
    this.isLiked = isLiked;
    return this;
  }

   /**
   * Get isLiked
   * @return isLiked
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsLiked() {
    return isLiked;
  }

  public void setIsLiked(Boolean isLiked) {
    this.isLiked = isLiked;
  }

  public Answer isDisliked(Boolean isDisliked) {
    this.isDisliked = isDisliked;
    return this;
  }

   /**
   * Get isDisliked
   * @return isDisliked
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getIsDisliked() {
    return isDisliked;
  }

  public void setIsDisliked(Boolean isDisliked) {
    this.isDisliked = isDisliked;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Answer answer = (Answer) o;
    return Objects.equals(this.answerId, answer.answerId) &&
        Objects.equals(this.answerDescription, answer.answerDescription) &&
        Objects.equals(this.questionId, answer.questionId) &&
        Objects.equals(this.answeringUser, answer.answeringUser) &&
        Objects.equals(this.createdDate, answer.createdDate) &&
        Objects.equals(this.isMarkedAnswer, answer.isMarkedAnswer) &&
        Objects.equals(this.noOfLikes, answer.noOfLikes) &&
        Objects.equals(this.noOfDislikes, answer.noOfDislikes) &&
        Objects.equals(this.replyCount, answer.replyCount) &&
        Objects.equals(this.isLiked, answer.isLiked) &&
        Objects.equals(this.isDisliked, answer.isDisliked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answerId, answerDescription, questionId, answeringUser, createdDate, isMarkedAnswer, noOfLikes, noOfDislikes, replyCount, isLiked, isDisliked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Answer {\n");
    
    sb.append("    answerId: ").append(toIndentedString(answerId)).append("\n");
    sb.append("    answerDescription: ").append(toIndentedString(answerDescription)).append("\n");
    sb.append("    questionId: ").append(toIndentedString(questionId)).append("\n");
    sb.append("    answeringUser: ").append(toIndentedString(answeringUser)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    isMarkedAnswer: ").append(toIndentedString(isMarkedAnswer)).append("\n");
    sb.append("    noOfLikes: ").append(toIndentedString(noOfLikes)).append("\n");
    sb.append("    noOfDislikes: ").append(toIndentedString(noOfDislikes)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    isLiked: ").append(toIndentedString(isLiked)).append("\n");
    sb.append("    isDisliked: ").append(toIndentedString(isDisliked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

