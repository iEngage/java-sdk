/**
 * iEngage 2.0 API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.iengage.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * DataFlavor
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-18T06:00:03.235Z")
public class DataFlavor   {
  @SerializedName("mimeType")
  private String mimeType = null;

  @SerializedName("humanPresentableName")
  private String humanPresentableName = null;

  @SerializedName("primaryType")
  private String primaryType = null;

  @SerializedName("subType")
  private String subType = null;

  @SerializedName("defaultRepresentationClassAsString")
  private String defaultRepresentationClassAsString = null;

  @SerializedName("flavorJavaFileListType")
  private Boolean flavorJavaFileListType = false;

  @SerializedName("flavorRemoteObjectType")
  private Boolean flavorRemoteObjectType = false;

  @SerializedName("flavorSerializedObjectType")
  private Boolean flavorSerializedObjectType = false;

  @SerializedName("flavorTextType")
  private Boolean flavorTextType = false;

  @SerializedName("mimeTypeSerializedObject")
  private Boolean mimeTypeSerializedObject = false;

  @SerializedName("representationClassByteBuffer")
  private Boolean representationClassByteBuffer = false;

  @SerializedName("representationClassCharBuffer")
  private Boolean representationClassCharBuffer = false;

  @SerializedName("representationClassInputStream")
  private Boolean representationClassInputStream = false;

  @SerializedName("representationClassReader")
  private Boolean representationClassReader = false;

  @SerializedName("representationClassRemote")
  private Boolean representationClassRemote = false;

  @SerializedName("representationClassSerializable")
  private Boolean representationClassSerializable = false;

  public DataFlavor mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public DataFlavor humanPresentableName(String humanPresentableName) {
    this.humanPresentableName = humanPresentableName;
    return this;
  }

   /**
   * Get humanPresentableName
   * @return humanPresentableName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getHumanPresentableName() {
    return humanPresentableName;
  }

  public void setHumanPresentableName(String humanPresentableName) {
    this.humanPresentableName = humanPresentableName;
  }

  public DataFlavor primaryType(String primaryType) {
    this.primaryType = primaryType;
    return this;
  }

   /**
   * Get primaryType
   * @return primaryType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getPrimaryType() {
    return primaryType;
  }

  public void setPrimaryType(String primaryType) {
    this.primaryType = primaryType;
  }

  public DataFlavor subType(String subType) {
    this.subType = subType;
    return this;
  }

   /**
   * Get subType
   * @return subType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSubType() {
    return subType;
  }

  public void setSubType(String subType) {
    this.subType = subType;
  }

  public DataFlavor defaultRepresentationClassAsString(String defaultRepresentationClassAsString) {
    this.defaultRepresentationClassAsString = defaultRepresentationClassAsString;
    return this;
  }

   /**
   * Get defaultRepresentationClassAsString
   * @return defaultRepresentationClassAsString
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDefaultRepresentationClassAsString() {
    return defaultRepresentationClassAsString;
  }

  public void setDefaultRepresentationClassAsString(String defaultRepresentationClassAsString) {
    this.defaultRepresentationClassAsString = defaultRepresentationClassAsString;
  }

  public DataFlavor flavorJavaFileListType(Boolean flavorJavaFileListType) {
    this.flavorJavaFileListType = flavorJavaFileListType;
    return this;
  }

   /**
   * Get flavorJavaFileListType
   * @return flavorJavaFileListType
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFlavorJavaFileListType() {
    return flavorJavaFileListType;
  }

  public void setFlavorJavaFileListType(Boolean flavorJavaFileListType) {
    this.flavorJavaFileListType = flavorJavaFileListType;
  }

  public DataFlavor flavorRemoteObjectType(Boolean flavorRemoteObjectType) {
    this.flavorRemoteObjectType = flavorRemoteObjectType;
    return this;
  }

   /**
   * Get flavorRemoteObjectType
   * @return flavorRemoteObjectType
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFlavorRemoteObjectType() {
    return flavorRemoteObjectType;
  }

  public void setFlavorRemoteObjectType(Boolean flavorRemoteObjectType) {
    this.flavorRemoteObjectType = flavorRemoteObjectType;
  }

  public DataFlavor flavorSerializedObjectType(Boolean flavorSerializedObjectType) {
    this.flavorSerializedObjectType = flavorSerializedObjectType;
    return this;
  }

   /**
   * Get flavorSerializedObjectType
   * @return flavorSerializedObjectType
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFlavorSerializedObjectType() {
    return flavorSerializedObjectType;
  }

  public void setFlavorSerializedObjectType(Boolean flavorSerializedObjectType) {
    this.flavorSerializedObjectType = flavorSerializedObjectType;
  }

  public DataFlavor flavorTextType(Boolean flavorTextType) {
    this.flavorTextType = flavorTextType;
    return this;
  }

   /**
   * Get flavorTextType
   * @return flavorTextType
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFlavorTextType() {
    return flavorTextType;
  }

  public void setFlavorTextType(Boolean flavorTextType) {
    this.flavorTextType = flavorTextType;
  }

  public DataFlavor mimeTypeSerializedObject(Boolean mimeTypeSerializedObject) {
    this.mimeTypeSerializedObject = mimeTypeSerializedObject;
    return this;
  }

   /**
   * Get mimeTypeSerializedObject
   * @return mimeTypeSerializedObject
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getMimeTypeSerializedObject() {
    return mimeTypeSerializedObject;
  }

  public void setMimeTypeSerializedObject(Boolean mimeTypeSerializedObject) {
    this.mimeTypeSerializedObject = mimeTypeSerializedObject;
  }

  public DataFlavor representationClassByteBuffer(Boolean representationClassByteBuffer) {
    this.representationClassByteBuffer = representationClassByteBuffer;
    return this;
  }

   /**
   * Get representationClassByteBuffer
   * @return representationClassByteBuffer
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRepresentationClassByteBuffer() {
    return representationClassByteBuffer;
  }

  public void setRepresentationClassByteBuffer(Boolean representationClassByteBuffer) {
    this.representationClassByteBuffer = representationClassByteBuffer;
  }

  public DataFlavor representationClassCharBuffer(Boolean representationClassCharBuffer) {
    this.representationClassCharBuffer = representationClassCharBuffer;
    return this;
  }

   /**
   * Get representationClassCharBuffer
   * @return representationClassCharBuffer
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRepresentationClassCharBuffer() {
    return representationClassCharBuffer;
  }

  public void setRepresentationClassCharBuffer(Boolean representationClassCharBuffer) {
    this.representationClassCharBuffer = representationClassCharBuffer;
  }

  public DataFlavor representationClassInputStream(Boolean representationClassInputStream) {
    this.representationClassInputStream = representationClassInputStream;
    return this;
  }

   /**
   * Get representationClassInputStream
   * @return representationClassInputStream
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRepresentationClassInputStream() {
    return representationClassInputStream;
  }

  public void setRepresentationClassInputStream(Boolean representationClassInputStream) {
    this.representationClassInputStream = representationClassInputStream;
  }

  public DataFlavor representationClassReader(Boolean representationClassReader) {
    this.representationClassReader = representationClassReader;
    return this;
  }

   /**
   * Get representationClassReader
   * @return representationClassReader
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRepresentationClassReader() {
    return representationClassReader;
  }

  public void setRepresentationClassReader(Boolean representationClassReader) {
    this.representationClassReader = representationClassReader;
  }

  public DataFlavor representationClassRemote(Boolean representationClassRemote) {
    this.representationClassRemote = representationClassRemote;
    return this;
  }

   /**
   * Get representationClassRemote
   * @return representationClassRemote
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRepresentationClassRemote() {
    return representationClassRemote;
  }

  public void setRepresentationClassRemote(Boolean representationClassRemote) {
    this.representationClassRemote = representationClassRemote;
  }

  public DataFlavor representationClassSerializable(Boolean representationClassSerializable) {
    this.representationClassSerializable = representationClassSerializable;
    return this;
  }

   /**
   * Get representationClassSerializable
   * @return representationClassSerializable
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getRepresentationClassSerializable() {
    return representationClassSerializable;
  }

  public void setRepresentationClassSerializable(Boolean representationClassSerializable) {
    this.representationClassSerializable = representationClassSerializable;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataFlavor dataFlavor = (DataFlavor) o;
    return Objects.equals(this.mimeType, dataFlavor.mimeType) &&
        Objects.equals(this.humanPresentableName, dataFlavor.humanPresentableName) &&
        Objects.equals(this.primaryType, dataFlavor.primaryType) &&
        Objects.equals(this.subType, dataFlavor.subType) &&
        Objects.equals(this.defaultRepresentationClassAsString, dataFlavor.defaultRepresentationClassAsString) &&
        Objects.equals(this.flavorJavaFileListType, dataFlavor.flavorJavaFileListType) &&
        Objects.equals(this.flavorRemoteObjectType, dataFlavor.flavorRemoteObjectType) &&
        Objects.equals(this.flavorSerializedObjectType, dataFlavor.flavorSerializedObjectType) &&
        Objects.equals(this.flavorTextType, dataFlavor.flavorTextType) &&
        Objects.equals(this.mimeTypeSerializedObject, dataFlavor.mimeTypeSerializedObject) &&
        Objects.equals(this.representationClassByteBuffer, dataFlavor.representationClassByteBuffer) &&
        Objects.equals(this.representationClassCharBuffer, dataFlavor.representationClassCharBuffer) &&
        Objects.equals(this.representationClassInputStream, dataFlavor.representationClassInputStream) &&
        Objects.equals(this.representationClassReader, dataFlavor.representationClassReader) &&
        Objects.equals(this.representationClassRemote, dataFlavor.representationClassRemote) &&
        Objects.equals(this.representationClassSerializable, dataFlavor.representationClassSerializable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mimeType, humanPresentableName, primaryType, subType, defaultRepresentationClassAsString, flavorJavaFileListType, flavorRemoteObjectType, flavorSerializedObjectType, flavorTextType, mimeTypeSerializedObject, representationClassByteBuffer, representationClassCharBuffer, representationClassInputStream, representationClassReader, representationClassRemote, representationClassSerializable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataFlavor {\n");
    
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    humanPresentableName: ").append(toIndentedString(humanPresentableName)).append("\n");
    sb.append("    primaryType: ").append(toIndentedString(primaryType)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    defaultRepresentationClassAsString: ").append(toIndentedString(defaultRepresentationClassAsString)).append("\n");
    sb.append("    flavorJavaFileListType: ").append(toIndentedString(flavorJavaFileListType)).append("\n");
    sb.append("    flavorRemoteObjectType: ").append(toIndentedString(flavorRemoteObjectType)).append("\n");
    sb.append("    flavorSerializedObjectType: ").append(toIndentedString(flavorSerializedObjectType)).append("\n");
    sb.append("    flavorTextType: ").append(toIndentedString(flavorTextType)).append("\n");
    sb.append("    mimeTypeSerializedObject: ").append(toIndentedString(mimeTypeSerializedObject)).append("\n");
    sb.append("    representationClassByteBuffer: ").append(toIndentedString(representationClassByteBuffer)).append("\n");
    sb.append("    representationClassCharBuffer: ").append(toIndentedString(representationClassCharBuffer)).append("\n");
    sb.append("    representationClassInputStream: ").append(toIndentedString(representationClassInputStream)).append("\n");
    sb.append("    representationClassReader: ").append(toIndentedString(representationClassReader)).append("\n");
    sb.append("    representationClassRemote: ").append(toIndentedString(representationClassRemote)).append("\n");
    sb.append("    representationClassSerializable: ").append(toIndentedString(representationClassSerializable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

