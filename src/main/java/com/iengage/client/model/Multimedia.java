/*
 * iEngage 2.0 API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.iengage.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Multimedia
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-27T14:33:47.218+05:30")
public class Multimedia {
  @SerializedName("multimediaId")
  private Long multimediaId = null;

  @SerializedName("usedFor")
  private String usedFor = null;

  @SerializedName("multimediaType")
  private String multimediaType = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("url")
  private String url = null;

  public Multimedia multimediaId(Long multimediaId) {
    this.multimediaId = multimediaId;
    return this;
  }

   /**
   * Get multimediaId
   * @return multimediaId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Long getMultimediaId() {
    return multimediaId;
  }

  public void setMultimediaId(Long multimediaId) {
    this.multimediaId = multimediaId;
  }

  public Multimedia usedFor(String usedFor) {
    this.usedFor = usedFor;
    return this;
  }

   /**
   * Get usedFor
   * @return usedFor
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUsedFor() {
    return usedFor;
  }

  public void setUsedFor(String usedFor) {
    this.usedFor = usedFor;
  }

  public Multimedia multimediaType(String multimediaType) {
    this.multimediaType = multimediaType;
    return this;
  }

   /**
   * Get multimediaType
   * @return multimediaType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMultimediaType() {
    return multimediaType;
  }

  public void setMultimediaType(String multimediaType) {
    this.multimediaType = multimediaType;
  }

  public Multimedia text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Multimedia url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Multimedia multimedia = (Multimedia) o;
    return Objects.equals(this.multimediaId, multimedia.multimediaId) &&
        Objects.equals(this.usedFor, multimedia.usedFor) &&
        Objects.equals(this.multimediaType, multimedia.multimediaType) &&
        Objects.equals(this.text, multimedia.text) &&
        Objects.equals(this.url, multimedia.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(multimediaId, usedFor, multimediaType, text, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Multimedia {\n");
    
    sb.append("    multimediaId: ").append(toIndentedString(multimediaId)).append("\n");
    sb.append("    usedFor: ").append(toIndentedString(usedFor)).append("\n");
    sb.append("    multimediaType: ").append(toIndentedString(multimediaType)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

