/**
 * iEngage 2.0 API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.iengage.service;

import com.iengage.ApiClient;
import com.iengage.ApiException;
import com.iengage.Configuration;
import com.iengage.client.model.VerveResponseUserPointsList;
import com.iengage.client.model.VerveResponseUserPoints;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RewardsApi
 */
public class RewardsApiTest {

    private RewardsApi api = null;
    private final ApiClient defaultClient = Configuration.getDefaultApiClient();

    
    /**
     * Get list of top friends
     *
     * Returns the list top friends
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopFriendsTest() throws ApiException {
        Long userId = null;
        Integer start = 0;
        Integer end = 10;
        String requesterId = null;
        String clientToken = null;;
        String accessToken = null;
        // 

        defaultClient.setAccessToken(null);
        api = new RewardsApi(defaultClient);
        
        System.out.println("\n\n\n >>>>>>>>>>>>> Get Top Friends Test >>>>>>>>>>");
        try{
        	VerveResponseUserPointsList response = api.getTopFriends(userId, start, end, requesterId, clientToken, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        	
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert false;
        }catch(Exception e){
        	e.printStackTrace();
        	assert false;
        }
        // TODO: test validations
    }
    
    /**
     * Get list of top users
     *
     * Returns the list of top users
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTopUsersTest() throws ApiException {
        Integer start = 0;
        Integer end = 10;
        String requesterId = null;
        String clientToken = null;;
        String accessToken = null;
        
        defaultClient.setAccessToken(null);
        api = new RewardsApi(defaultClient);
        
        System.out.println("\n\n\n >>>>>>>>>>>>> Get Top Users Test >>>>>>>>>>");
        try{
        	VerveResponseUserPointsList response = api.getTopUsers(start, end, requesterId, clientToken, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        	
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert false;
        }catch(Exception e){
        	e.printStackTrace();
        	assert false;
        }
        // TODO: test validations
    }
    
    /**
     * Get list of user points
     *
     * Returns the list of user points
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserPointsTest() throws ApiException {
        Long userId = null;
        String requesterId = null;
        String clientToken = null;;
        String accessToken = null;
        
        defaultClient.setAccessToken(null);
        api = new RewardsApi(defaultClient);
        
        System.out.println("\n\n\n >>>>>>>>>>>>> Get User Points Test >>>>>>>>>>");
        try{
        	VerveResponseUserPoints response = api.getUserPoints(userId, requesterId, clientToken, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        	
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert false;
        }catch(Exception e){
        	e.printStackTrace();
        	assert false;
        }
        // TODO: test validations
    }
    
}
