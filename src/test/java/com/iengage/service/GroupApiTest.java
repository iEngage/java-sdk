/**
 * iEngage 2.0 API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.iengage.service;

import com.iengage.ApiClient;
import com.iengage.ApiException;
import com.iengage.Configuration;
import com.iengage.client.model.VerveResponseGroup;
import com.iengage.client.model.Group;
import com.iengage.client.model.VerveResponseUserList;
import com.iengage.client.model.VerveResponseIdeaList;
import com.iengage.client.model.VerveResponseGroupList;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupApi
 */

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class GroupApiTest {

    private  GroupApi api =null;
    private final ApiClient defaultClient = Configuration.getDefaultApiClient();
    private static Long null;
    
    /**
     * Create group
     *
     * This service allows a user to create a group. The following fields(key:value) are required to be present in the Group JSON object. Refer to the Model &amp; Model Schema of the expected JSON Object for the body of this API. **Required fields**      1. association      2. groupName      3. description      4. managerId [1,2,..]      5. accessType
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void a_createGroupTest() throws ApiException {
        String requesterId = null;
        String clientToken = null;
        String accessToken = null;
        
        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Create Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.createGroup(requesterId, clientToken, body, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		null = response.getData().getGroupId();
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
    }
    
    
    /**
     * Follow group
     *
     * Allows the user to follow a group. Returns the followed group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void b_followGroupTest() throws ApiException {
        Long groupId = null;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroup response = api.followGroup(groupId, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Follow Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.followGroup(groupId, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    
    /**
     * Update group
     *
     * Allows the user to update the group. Returns the updated group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void c_updateGroupTest() throws ApiException {
        Long groupId = null;
        String title = null;
        String description = null;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroup response = api.updateGroup(groupId, title, description, requesterId, clientToken, fields, accessToken);

        
        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Update Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.followGroup(groupId, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    
    
    
    
    /**
     * Get the list of followers for the group
     *
     * Returns the list of followers for the group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void d_getGroupFollowersTest() throws ApiException {
        Long groupId = null;
        Integer start = 0;
        Integer end =10;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseUserList response = api.getGroupFollowers(groupId, start, end, requesterId, clientToken, fields, accessToken);

        
        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Get Group Follower Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.followGroup(groupId, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Get list of all ideas in a group
     *
     * Returns the list of all ideas in a group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void e_getGroupIdeasTest() throws ApiException {
        Long groupId = null;
        Integer start = 0;
        Integer end =10;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseIdeaList response = api.getGroupIdeas(groupId, start, end, requesterId, clientToken, fields, accessToken);

        
        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Get Group Ideas Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.followGroup(groupId, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Get the list of groups visible for user
     *
     * Returns the list of groups
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void f_getGroupsTest() throws ApiException {
        Integer start = 0;
        Integer end =10;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroupList response = api.getGroups(start, end, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Get Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroupList response = api.getGroups(start, end, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Get list of recommended groups
     *
     * Returns the list of recommended groups
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void g_getRecommendationGroupTest() throws ApiException {
        Integer start = 0;
        Integer end =10;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroupList response = api.getRecommendationGroup(start, end, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Get Recommendation Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroupList response = api.getRecommendationGroup(start, end, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Get list of groups that a user is following
     *
     * Returns the list of groups the user is following
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void h_getUserFollowingGroupsTest() throws ApiException {
        Long userId = 532893L;
        Integer start = 0;
        Integer end =10;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroupList response = api.getUserFollowingGroups(userId, start, end, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Get User Following Groups Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroupList response = api.getUserFollowingGroups(userId, start, end, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Get list of matching groups
     *
     * Returns the list of matching group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void i_searchGroupsTest() throws ApiException {
        String query = "Updated";
        Integer start = 0;
        Integer end =10;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroupList response = api.searchGroups(query, start, end, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Search Groups Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroupList response = api.searchGroups(query, start, end, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Unfollow group
     *
     * Allows the user to unfollow a group. Returns the unfollowed group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void j_unfollowGroupTest() throws ApiException {
        Long groupId = null;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroup response = api.unfollowGroup(groupId, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Unfollow Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.unfollowGroup(groupId, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    /**
     * Delete group
     *
     * Allows the user to delete a group. Returns the deleted group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void k_deleteGroupTest() throws ApiException {
        Long groupId = null;
        String requesterId = null;
        String clientToken = null;;
        String fields = null;
        String accessToken = null;
        // VerveResponseGroup response = api.deleteGroup(groupId, requesterId, clientToken, fields, accessToken);

        defaultClient.setAccessToken(null);
        api = new GroupApi(defaultClient);
        
        System.out.println("\n\n\n>>>>>>>>>>>Delete Group Test>>>>>>>>>>>>>>>>>>>>");
        try{
        	VerveResponseGroup response = api.deleteGroup(groupId, requesterId, clientToken, fields, accessToken);
        	if(response!=null){
        		System.out.println(response);
        		assert true;
        	}
        	else{
        		assert false;
        	}
        }catch(ApiException e){
        	System.out.println(e.getResponseBody());
        	assert true;
        }catch(Exception e){
        	e.printStackTrace();
        	assert true;
        }
        // TODO: test validations
    }
    
    
    
}
