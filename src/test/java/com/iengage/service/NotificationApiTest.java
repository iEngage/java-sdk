/*
 * iEngage 2.0 API
 * This API enables Intelligent Engagement for your Business. iEngage is a platform that combines process, augmented intelligence and rewards to help you intelligently engage customers.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.iengage.service;

import com.iengage.ApiException;
import com.iengage.client.model.Notification;
import com.iengage.client.model.VerveResponseNotificationList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationApi
 */
@Ignore
public class NotificationApiTest {

    private final NotificationApi api = new NotificationApi();

    
    /**
     * Create custom notification
     *
     * This service allows a user to create a notification. The following fields(key:value) are required to be present in the Notification JSON object. Refer to the Model &amp; Model Schema of the expected JSON Object for the body of this API.&lt;/br&gt;&lt;b&gt;Required fields &lt;/br&gt;1. title &lt;/br&gt;2. body &lt;/br&gt;3. extraData &lt;/br&gt;4. roleName OR toUser: { emailId }
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addNotificationTest() throws ApiException {
        String requesterId = null;
        String clientToken = null;
        Notification body = null;
        String accessToken = null;
        Boolean response = api.addNotification(requesterId, clientToken, body, accessToken);

        // TODO: test validations
    }
    
    /**
     * Get list of notifications
     *
     * Return the list of notifications
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNotificationsTest() throws ApiException {
        String type = null;
        Integer start = null;
        Integer end = null;
        String requesterId = null;
        String clientToken = null;
        String fields = null;
        String accessToken = null;
        VerveResponseNotificationList response = api.getNotifications(type, start, end, requesterId, clientToken, fields, accessToken);

        // TODO: test validations
    }
    
    /**
     * Mark all notification as read
     *
     * Allows the user to mark all the notification as read
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void markAllNotificationAsReadTest() throws ApiException {
        String requesterId = null;
        String clientToken = null;
        String accessToken = null;
        Boolean response = api.markAllNotificationAsRead(requesterId, clientToken, accessToken);

        // TODO: test validations
    }
    
    /**
     * Mark notification as read
     *
     * Allows the user to mark the notification as read
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void markNotificationAsReadTest() throws ApiException {
        Long notificationId = null;
        String requesterId = null;
        String clientToken = null;
        String accessToken = null;
        Boolean response = api.markNotificationAsRead(notificationId, requesterId, clientToken, accessToken);

        // TODO: test validations
    }
    
    /**
     * Get notifications count
     *
     * Returns the notification count
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationCountTest() throws ApiException {
        String type = null;
        String requesterId = null;
        String clientToken = null;
        String accessToken = null;
        Long response = api.notificationCount(type, requesterId, clientToken, accessToken);

        // TODO: test validations
    }
    
}
